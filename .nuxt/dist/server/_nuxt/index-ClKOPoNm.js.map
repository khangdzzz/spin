{"version":3,"file":"index-ClKOPoNm.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<script setup>\nimport { Wheel } from \"spin-wheel\";\n\nlet modifier = 0;\nconst wheel = ref(null)\n\n\nconst initProject = async () => {\n  await loadFonts(props.map(i => i.itemLabelFont));\n\n  wheel.value = new Wheel(document.querySelector('.wheel-wrapper'));\n  const dropdown = document.querySelector('select');\n\n  const images = [];\n\n  for (const p of props) {\n    // Initalise dropdown with the names of each example:\n    const opt = document.createElement('option');\n    opt.textContent = p.name;\n    dropdown.append(opt);\n\n    // Convert image urls into actual images:\n    images.push(initImage(p, 'image'));\n    images.push(initImage(p, 'overlayImage'));\n    for (const item of p.items) {\n      images.push(initImage(item, 'image'));\n    }\n  }\n\n  await loadImages(images);\n\n  // Show the wheel once everything has loaded\n  document.querySelector('.wheel-wrapper').style.visibility = 'visible';\n\n  // Handle dropdown change:\n  dropdown.onchange = () => {\n    wheel.value.init({\n      ...props[dropdown.selectedIndex],\n      rotation: wheel.value.rotation, // Preserve value.\n    });\n  };\n\n  // Select default:\n  dropdown.options[0].selected = 'selected';\n  dropdown.onchange();\n\n\n}\n\nconst spin = () => {\n  const {duration, winningItemRotaion} = calcSpinToValues();\n  wheel.value.spinTo(winningItemRotaion, duration);\n}\n\nconst calcSpinToValues = () => {\n    const duration = 3000;\n    const winningItemRotaion = getRandomInt(360, 360 * 1.75) + modifier;\n    modifier += 360 * 1.75;\n    return {duration, winningItemRotaion};\n  }\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst initImage = (obj, pName) => {\n  if (!obj[pName]) return null;\n  const i = new Image();\n  i.src = obj[pName];\n  obj[pName] = i;\n  return i;\n}\n\nonMounted(async () => {\n  await initProject();\n});\n\n</script>\n\n<template>\n  <div class=\"gui-wrapper\">\n    <p>Click-drag (or touch-flick) to spin the wheel.</p>\n    <div>\n      <button @click=\"spin\">Spin</button>\n      <p><label>Theme:</label><select></select></p>\n    </div>\n  </div>\n\n  <div class=\"wheel-wrapper\" ref=\"wheelContainer\"></div>\n</template>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Rubik:wght@400&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Amatic+SC:wght@400&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Pragati+Narrow&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&display=swap');\n\n* {\n  margin: 0;\n  padding: 0;\n  font-family: 'Lucida Grande', sans-serif;\n  font-size: 15px;\n  -webkit-tap-highlight-color: transparent;\n  user-select: none; /* Prevent selecting ui text when dragging */\n}\n\nhtml, body {\n  height: 100%;\n}\n\nbody {\n  /* Prevent pull-down-to-refresh gesture */\n  overscroll-behavior-y: contain;\n\n  /* Prevent iOS rubber-band effect */\n  position: fixed;\n  width: 100%;\n\n  /* Prevent browser from handling touch events */\n  touch-action: none;\n\n  display: flex;\n  flex-direction: column;\n  justify-items: stretch;\n  align-items: stretch;\n}\n\n.wheel-wrapper {\n  /* Hide UI during page load */\n  visibility: hidden;\n\n  overflow: hidden;\n  height: 100%;\n  width: 100%;\n}\n\n.gui-wrapper {\n  padding: 10px;\n  background-color: #f3f3f3;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.gui-wrapper > div {\n  display: flex;\n  flex-direction:row;\n  gap: 10px;\n  align-items: center;\n}\n\nselect {\n  padding: 2px;\n}\n\nlabel {\n  margin-right: 5px;\n}\n\nbutton {\n  padding: 10px 20px;\n  cursor: pointer;\n  margin-right: 10px;\n  max-width: 100px;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIc,QAAI,IAAI;;;;;;;;;;;;;"}